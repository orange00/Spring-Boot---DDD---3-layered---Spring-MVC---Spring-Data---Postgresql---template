<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>template</groupId>
	<artifactId>Spring Boot - DDD - Spring Data - Postgresql</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Spring Boot - DDD - Spring Data - Postgresql - template</name>
	<description>Spring Boot - DDD - Spring Data - Postgresql - template</description>

	<!-- Also contains Jackson core dependency of some (lower) version. -->
	<!-- Does not contain Jackson databind dependency. If you include Jackson databind there will be version conflicts -->
	<!-- Does not include dependencies for any other projects/tools/starters.
	However, for a lot of projects/tools/starters configures which versions should be downloaded
	when their dependencies are included. Those versions are configured so there are no conflicts between versions.
	The list of projects whose versions are configured can be found under Managed Dependencies at : https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-parent/1.5.3.RELEASE-->
	<!-- So, when you want to use a tool (eg. spring-boot-starter), all you have to do is include the dependency for that tool, without the <version> tag -->
	<parent>
		<!-- Setup Spring Boot -->
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<java.version>1.8</java.version>

		<!-- This is contained in spring boot starter parent
		< Maven's default source and target is 1.5 >
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		-->
	</properties>

	<dependencies>
		<!-- Core starter, including auto-configuration support, logging and YAML. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<!-- Spring Web. Starter for building web, including RESTful, applications using Spring MVC. Uses Tomcat as the default embedded container-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring testing-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>


		<!-- Jackson for controllers (de)serialization -->
		<!-- RestTemplate doesnt use this?  -->
		<!-- Jackson databind, which contains Object mapper and enables
		java OBJECT (de)serialization is built on Jackson Core -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<!-- Jackson Core. Enables basic (eg., string, int,..) (de)serialization -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<!-- Jackson annotations -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>



		<!-- Database / Data Source -->
		<!-- This dependency contains the @RepositoryRestResource annotation
		Enables automatic REST server creation for Spring Data repository-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<!-- This dependency contains the Spring JPA implementation (currently Hibernate JPA)
		 Also, contains Spring Data Repository classes and repository methods autoimplementation
		 functionality.
		 Note: When one says says Spring Data (repositories) it means Spring Data JPA (repositories)-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- Database JDBC driver -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>


		<!-- Outer tools -->
		<!-- Object mapper -->
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>0.7.8</version>
		</dependency>

		<!-- Template only
		 Only here so that the template examples can compile. Should be removed unless MongoDB will be used.-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<!-- I have no idea what this is for! -->
	<repositories>
		<repository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</pluginRepository>
	</pluginRepositories>



</project>
